// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  age          Int
  writtenPosts Post[] @relation("WrittenPosts")
  favPosts     Post[] @relation("FavPosts")
  role         Role   @default(Watcher)

  UserPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique

  @@unique([name, age])
  @@index([email]) // that is indexing for the field
}

model Post {
  id         String     @id @default(uuid())
  title      String
  rating     Float
  updateAt   DateTime
  author     User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId   String
  favBy      User       @relation("FavPosts", fields: [favId], references: [id])
  favId      String
  categories Category[]
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  post Post[]
}

enum Role {
  Watcher
  Admin
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
  // userId       String  @unique
  // user         User    @relation(fields: [userId], references: [id])
}
